// Code generated by goctl. DO NOT EDIT.
// Source: stock.proto

package stockclient

import (
	"context"

	"stock/stock"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Response                   = stock.Response
	TranUpdateInventoryRequest = stock.TranUpdateInventoryRequest

	Stock interface {
		TranUpdateInventory(ctx context.Context, in *TranUpdateInventoryRequest, opts ...grpc.CallOption) (*Response, error)
		TranUpdateInventoryRollback(ctx context.Context, in *TranUpdateInventoryRequest, opts ...grpc.CallOption) (*Response, error)
	}

	defaultStock struct {
		cli zrpc.Client
	}
)

func NewStock(cli zrpc.Client) Stock {
	return &defaultStock{
		cli: cli,
	}
}

func (m *defaultStock) TranUpdateInventory(ctx context.Context, in *TranUpdateInventoryRequest, opts ...grpc.CallOption) (*Response, error) {
	client := stock.NewStockClient(m.cli.Conn())
	return client.TranUpdateInventory(ctx, in, opts...)
}

func (m *defaultStock) TranUpdateInventoryRollback(ctx context.Context, in *TranUpdateInventoryRequest, opts ...grpc.CallOption) (*Response, error) {
	client := stock.NewStockClient(m.cli.Conn())
	return client.TranUpdateInventoryRollback(ctx, in, opts...)
}
